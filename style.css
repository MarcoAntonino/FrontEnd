*/* Asterisco vuol dire a qualsiasi tag html applica...*/{
  box-sizing: border-box;
  border: 1px solid black; /*in fase di sviluppo hai evidenza degli spazi
  la togleirai quando hai finito*/
}
/*
In box sizing gli sto dicendo che lui deve essere contenuto all'interno del mio monitor. Altrimenti si prende le posizioni assolute.
Forziamo tutti i nostri contenitori ad essere allineati e contenuti all'interno del nostro schermo.
in qeusto modo anche se c'è il padding, posso affiancare gli elementi
DA METTERE SEMPRE IN TESTA
*/
html, body{/*html dice al browser che da dove inizia il suo tag deve stampare tutto*/
  margin: 0px;
    /*Elimino i bordi del body! Molto importante.*/
  height: 100vh; /*Prende tutta l'altezza del mondo*/
  /*Visto che è tutto in percentuale, è la percentuale della finestra e dobbiamo specificare, prima che il suo genitore è il 100% della finestra.
  Quindi se c'è ereditarietà, è una percentuale relativa (ovviamente html e body sono i padri di tutti). Quindi devo sempre specificare una funzione*/

}

body{
  padding-top: 90px;
}
/*Avendo dato una fixed alla navbar e header, bisogna dare un padding
della loro altezza al body*/

.bg{

  background: #c6f09d;
  width: 100%; /*Prenditi la metà dello schermo*/
  float: left;/*Serve per fare un allineamento*/
  padding: 20px;
  /*height: 50%;*/ /*Prende il 50% del suo genitore, che è body*/
}
.bg2{
  background: #01aa24;
  width: 50%;
  padding: 20px;
  margin: 10px auto;
  height: 25%;

  /*Il float è un modo per affiancare due div. Ovviamente dovranno appartenere a due classi differenti con float differente*/
}
.bg3{
  background: green;
  width: 50%;
  padding: 20px;
  float: right;
  height: 25%;
  text-align: center;
  /*margin: 0 auto 0 auto;*//*Si parte dal top e si va in senso orario*/
  /*margin: 0 auto*/ /*Sopra e sotto, dx e sx hanno lo stesso valore*/



}

.text-color{
  color: red;
}
.container:after {/* È un div per incapsulare tutto. È una corsia in cui mettere le mie tessere*/
  /*Gli sto dicendo, pulisci e vai a capo*/
  content: "";
  display: block;
  clear: both; /*è sempre un contenitore ma gli stai dicendo di spezzare
  la linea di elementi*/
}

.container{
  height: 100%;

}

header {
  background: #cfd170;
  padding: 20px;
  width: 100%;
  height: 50px;
  margin-bottom: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
}
/*
Se lo mettiamo fixed
*/

header .logo /*logo appartiene a bg*/ {
  float: left;

}

header .login{ /*è familiartà non ereditarietà*/
  float: right;

}

header .text-color {
  color: white;
}

.text-color {
  color: blue;
}

nav{
  background: #eee;
  height: 40px;
  padding-top: 9px;
  padding-left: 20px;
  position: fixed;
  top: 50; /*altezza header*/
  left:0;
  right: 0;
  z-index: 100;/*Ovviamente anche lei 100*/

}
nav ul{
  /*Stilizziamo la ul di nav*/
  list-style: none; /*Toglie i puntini*/
  margin: 0; /*Elimina i margini*/
  padding: 0;
  }

nav ul a{
  text-decoration: none; /*niente elementi nei link*/

}

nav ul li{
  float: left;/*li metto tutti in linea. Vengono disposti orizzontamlmente ma
  sono separati tra di loro da un piccolo margine*/
  margin-right: 10px;
}

section h1{
  color: white;
}

section p{
  color: white;
}

section{
  float: left;
  height: 100%;
  background: #a897e8;
  width: 60%;
}

aside{
  float: right;
  height: 100%;
  background: #6b7be4;
  width: 200px;
  width: 40%;
}

footer{ /*grazie ai tag semantici non dobbiamo inventarci nomi strani*/
  background-color: rgb(66, 94, 133);
  color: white;
  padding: 10px;
  text-align: center;
  height: 100px;
}

/*L'altezza è statica, ma ci interessa di più una scalabilità per i
contenuti*/

/*
section.classe{} //la classe di section
section .classe{} //i figli di section faranno così

*/

.square-section{
  width: 100px;
  height: 100px;
  background-color: white;
  position: fixed;
  top: 50px;
  right: 50px;
}
